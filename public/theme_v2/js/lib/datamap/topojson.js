topojson=function(){function n(t,e){var n={type:"Feature",id:e.id,properties:e.properties||{},geometry:d(t,e)};return null==e.id&&delete n.id,n}function d(t,e){var n=t.transform,c=n.scale[0],s=n.scale[1],f=n.translate[0],l=n.translate[1],d=t.arcs;function o(t,e){e.length&&e.pop();for(var n,r=d[t<0?~t:t],o=0,a=r.length,i=0,u=0;o<a;++o)e.push([(i+=(n=r[o])[0])*c+f,(u+=n[1])*s+l]);t<0&&function(t,e){var n,r=t.length,o=r-e;for(;o<--r;)n=t[o],t[o++]=t[r],t[r]=n}(e,a)}function r(t){return[t[0]*c+f,t[1]*s+l]}function a(t){for(var e=[],n=0,r=t.length;n<r;++n)o(t[n],e);return e.length<2&&e.push(e[0]),e}function i(t){for(var e=a(t);e.length<4;)e.push(e[0]);return e}function u(t){return t.map(i)}var p={Point:function(t){return r(t.coordinates)},MultiPoint:function(t){return t.coordinates.map(r)},LineString:function(t){return a(t.arcs)},MultiLineString:function(t){return t.arcs.map(a)},Polygon:function(t){return u(t.arcs)},MultiPolygon:function(t){return t.arcs.map(u)}};return function t(e){var n=e.type;return"GeometryCollection"===n?{type:n,geometries:e.geometries.map(t)}:n in p?{type:n,coordinates:p[n](e)}:null}(e)}function u(t,e){for(var n=0,r=t.length;n<r;){var o=n+r>>>1;t[o]<e?n=o+1:r=o}return n}return{version:"1.1.3",mesh:function(t,e,n){var r=[];if(1<arguments.length){var o,a=[];function i(t){t<0&&(t=~t),(a[t]||(a[t]=[])).push(o)}function u(t){t.forEach(i)}function c(t){t.forEach(u)}var s={LineString:u,MultiLineString:c,Polygon:c,MultiPolygon:function(t){t.forEach(c)}};!function t(e){"GeometryCollection"===e.type?e.geometries.forEach(t):e.type in s&&s[(o=e).type](e.arcs)}(e),a.forEach(arguments.length<3?function(t,e){r.push(e)}:function(t,e){n(t[0],t[t.length-1])&&r.push(e)})}else for(var f=0,l=t.arcs.length;f<l;++f)r.push(f);return d(t,{type:"MultiLineString",arcs:function(o,t){var n={},c={},s={};function f(t){var e=o.arcs[t],n=e[0],r=[0,0];return e.forEach(function(t){r[0]+=t[0],r[1]+=t[1]}),[n,r]}t.forEach(function(t){var e=f(t);(n[e[0]]||(n[e[0]]=[])).push(t),(n[e[1]]||(n[e[1]]=[])).push(~t)}),t.forEach(function(t){var e,n,r=f(t),o=r[0],a=r[1];if(e=s[o])if(delete s[e.end],e.push(t),e.end=a,n=c[a]){delete c[n.start];var i=n===e?e:e.concat(n);c[i.start=e.start]=s[i.end=n.end]=i}else(n=s[a])?(delete c[n.start],delete s[n.end],i=e.concat(n.map(function(t){return~t}).reverse()),c[i.start=e.start]=s[i.end=n.start]=i):c[e.start]=s[e.end]=e;else if(e=c[a])if(delete c[e.start],e.unshift(t),e.start=o,n=s[o]){delete s[n.end];var u=n===e?e:n.concat(e);c[u.start=n.start]=s[u.end=e.end]=u}else(n=c[o])?(delete c[n.start],delete s[n.end],u=n.map(function(t){return~t}).reverse().concat(e),c[u.start=n.end]=s[u.end=e.end]=u):c[e.start]=s[e.end]=e;else(e=c[o])?(delete c[e.start],e.unshift(~t),e.start=a,(n=s[a])?(delete s[n.end],u=n===e?e:n.concat(e),c[u.start=n.start]=s[u.end=e.end]=u):(n=c[a])?(delete c[n.start],delete s[n.end],u=n.map(function(t){return~t}).reverse().concat(e),c[u.start=n.end]=s[u.end=e.end]=u):c[e.start]=s[e.end]=e):(e=s[a])?(delete s[e.end],e.push(~t),e.end=o,(n=s[o])?(delete c[n.start],i=n===e?e:e.concat(n),c[i.start=e.start]=s[i.end=n.end]=i):(n=c[o])?(delete c[n.start],delete s[n.end],i=e.concat(n.map(function(t){return~t}).reverse()),c[i.start=e.start]=s[i.end=n.start]=i):c[e.start]=s[e.end]=e):c[(e=[t]).start=o]=s[e.end=a]=e});var e=[];for(var r in s)e.push(s[r]);return e}(t,r)})},feature:function(e,t){return"GeometryCollection"===t.type?{type:"FeatureCollection",features:t.geometries.map(function(t){return n(e,t)})}:n(e,t)},neighbors:function(t){var n=[],o=t.map(function(){return[]});function r(t,r){t.forEach(function(t){t<0&&(t=~t);var e=n[t]||(n[t]=[]);e[r]||(e.forEach(function(t){var e,n;n=u(e=o[r],t),e[n]!==t&&e.splice(n,0,t),n=u(e=o[t],r),e[n]!==r&&e.splice(n,0,r)}),e[r]=r)})}function a(t,e){t.forEach(function(t){r(t,e)})}var i={LineString:r,MultiLineString:a,Polygon:a,MultiPolygon:function(t,e){t.forEach(function(t){a(t,e)})}};return t.forEach(function e(t,n){"GeometryCollection"===t.type?t.geometries.forEach(function(t){e(t,n)}):t.type in i&&i[t.type](t.arcs,n)}),o}}}();