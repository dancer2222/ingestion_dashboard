!function(e,r,t){function i(e){this._init(e)}i.prototype={_init:function(e){r.extend(!0,this,e)},validate:function(n){var a=[];return r.each(this._normalizeRules(n.rules),function(e,t){if(!t.validator(n.value,n.item,t.param)){var i=r.isFunction(t.message)?t.message(n.value,n.item):t.message;a.push(i)}}),a},_normalizeRules:function(e){return r.isArray(e)||(e=[e]),r.map(e,r.proxy(function(e){return this._normalizeRule(e)},this))},_normalizeRule:function(e){if("string"==typeof e&&(e={validator:e}),r.isFunction(e)&&(e={validator:e}),!r.isPlainObject(e))throw Error("wrong validation config specified");return e=r.extend({},e),r.isFunction(e.validator)?e:this._applyNamedValidator(e,e.validator)},_applyNamedValidator:function(e,t){delete e.validator;var i=n[t];if(!i)throw Error('unknown validator "'+t+'"');return r.isFunction(i)&&(i={validator:i}),r.extend({},i,e)}},e.Validation=i;var n={required:{message:"Field is required",validator:function(e){return null!=e&&""!==e}},rangeLength:{message:"Field value length is out of the defined range",validator:function(e,t,i){return e.length>=i[0]&&e.length<=i[1]}},minLength:{message:"Field value is too short",validator:function(e,t,i){return e.length>=i}},maxLength:{message:"Field value is too long",validator:function(e,t,i){return e.length<=i}},pattern:{message:"Field value is not matching the defined pattern",validator:function(e,t,i){return"string"==typeof i&&(i=new RegExp("^(?:"+i+")$")),i.test(e)}},range:{message:"Field value is out of the defined range",validator:function(e,t,i){return e>=i[0]&&e<=i[1]}},min:{message:"Field value is too small",validator:function(e,t,i){return i<=e}},max:{message:"Field value is too large",validator:function(e,t,i){return e<=i}}};e.validators=n}(jsGrid,jQuery);